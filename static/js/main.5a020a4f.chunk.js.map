{"version":3,"sources":["style.module.css","App.js","index.js"],"names":["module","exports","App","useState","sec","setSec","status","setStatus","useEffect","range","Subject","interval","pipe","takeUntil","subscribe","val","next","complete","start","React","useCallback","stop","reset","wait","stopwatch","Date","toISOString","slice","className","style","container","button","type","onClick","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gGACAA,EAAOC,QAAU,CAAC,UAAY,yBAAyB,OAAS,sBAAsB,MAAQ,uB,oICK/E,SAASC,IACtB,MAAsBC,mBAAS,GAA/B,mBAAOC,EAAP,KAAYC,EAAZ,KACA,EAA4BF,mBAAS,QAArC,mBAAOG,EAAP,KAAeC,EAAf,KAEAC,qBAAU,WACR,IAAMC,EAAQ,IAAIC,IASlB,OARAC,YAAS,KACNC,KAAKC,YAAUJ,IACfK,WAAU,WACM,QAAXR,GACFD,GAAO,SAACU,GAAD,OAASA,EAAM,UAIrB,WACLN,EAAMO,OACNP,EAAMQ,cAEP,CAACX,IAEJ,IAAMY,EAAQC,IAAMC,aAAY,WAC9Bb,EAAU,SACT,IAEGc,EAAOF,IAAMC,aAAY,WAC7Bb,EAAU,QACVF,EAAO,KACN,IAEGiB,EAAQH,IAAMC,aAAY,WAC9Bf,EAAO,KACN,IAEGkB,EAAOJ,IAAMC,aAAY,WAC7Bb,EAAU,UACT,IAEGiB,EAAY,IAAIC,KAAKrB,GAAKsB,cAAcC,MAAM,GAAI,IAExD,OACE,sBAAKC,UAAWC,IAAMC,UAAtB,UACE,qCAAQN,KACR,sBAAKI,UAAWC,IAAME,OAAtB,UACE,wBAAQH,UAAWC,IAAMX,MAAOc,KAAK,SAASC,QAASf,EAAvD,mBAGA,wBAAQU,UAAWC,IAAMX,MAAOc,KAAK,SAASC,QAASZ,EAAvD,kBAGA,wBAAQO,UAAWC,IAAMX,MAAOc,KAAK,SAASC,QAASX,EAAvD,mBAGA,wBAAQM,UAAWC,IAAMX,MAAOc,KAAK,SAASC,QAASV,EAAvD,wBCrDRW,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAClC,EAAD,MAEFmC,SAASC,eAAe,W","file":"static/js/main.5a020a4f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"style_container__20c30\",\"button\":\"style_button__29Lsg\",\"start\":\"style_start__3KlFe\"};","import React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { interval, Subject } from \"rxjs\";\r\nimport { takeUntil } from \"rxjs/operators\";\r\nimport style from \"./style.module.css\";\r\n\r\nexport default function App() {\r\n  const [sec, setSec] = useState(0);\r\n  const [status, setStatus] = useState(\"stop\");\r\n\r\n  useEffect(() => {\r\n    const range = new Subject();\r\n    interval(1000)\r\n      .pipe(takeUntil(range))\r\n      .subscribe(() => {\r\n        if (status === \"run\") {\r\n          setSec((val) => val + 1000);\r\n        }\r\n      });\r\n\r\n    return () => {\r\n      range.next();\r\n      range.complete();\r\n    };\r\n  }, [status]);\r\n\r\n  const start = React.useCallback(() => {\r\n    setStatus(\"run\");\r\n  }, []);\r\n\r\n  const stop = React.useCallback(() => {\r\n    setStatus(\"stop\");\r\n    setSec(0);\r\n  }, []);\r\n\r\n  const reset = React.useCallback(() => {\r\n    setSec(0);\r\n  }, []);\r\n\r\n  const wait = React.useCallback(() => {\r\n    setStatus(\"stop\");\r\n  }, []);\r\n\r\n  const stopwatch = new Date(sec).toISOString().slice(11, 19);\r\n\r\n  return (\r\n    <div className={style.container}>\r\n      <span> {stopwatch}</span>\r\n      <div className={style.button}>\r\n        <button className={style.start} type=\"button\" onClick={start}>\r\n          Start\r\n        </button>\r\n        <button className={style.start} type=\"button\" onClick={stop}>\r\n          Stop\r\n        </button>\r\n        <button className={style.start} type=\"button\" onClick={reset}>\r\n          Reset\r\n        </button>\r\n        <button className={style.start} type=\"button\" onClick={wait}>\r\n          Wait\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}